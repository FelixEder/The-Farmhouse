#BlueJ class context
comment0.params=name
comment0.target=Player(java.lang.String)
comment0.text=\n\ Constructor\ for\ for\ class\ Player,\ takes\ one\ parameter,\ all\ other\ fields\ have\ preset\ values.\n\ @param\ name\ The\ name\ of\ the\ player.\n
comment1.params=room
comment1.target=void\ setCurrentRoom(Room)
comment1.text=\n\ Sets\ the\ field\ currentRoom\ to\ the\ parameter\ room.\n\ @param\ room\ The\ that\ the\ player\ currently\ is\ in.\n
comment10.params=
comment10.target=void\ increaseMaxWeigth()
comment10.text=\n\ Increases\ maxWeigth\ with\ 300\ and\ sets\ screamedWithFork\ to\ true.\n
comment11.params=
comment11.target=boolean\ hasScreamedWithFork()
comment11.text=\n\ Returns\ the\ boolean\ screamedWithFork.\n\ @return\ The\ boolean\ value\ screamedWithFork\ is\ set\ to.\n
comment2.params=
comment2.target=Room\ getCurrentRoom()
comment2.text=\n\ Returns\ the\ current\ room\ the\ player\ is\ in.\n\ @return\ The\ current\ room\ the\ player\ inhabits.\n
comment3.params=
comment3.target=void\ addRoomToStack()
comment3.text=\n\ Adds\ the\ player's\ current\ room\ to\ a\ Stack\ of\ rooms.\n
comment4.params=
comment4.target=void\ removeRoomFromStack()
comment4.text=\n\ Sets\ the\ current\ room\ to\ the\ room\ on\ top\ of\ the\ stash.\n
comment5.params=
comment5.target=boolean\ checkIfEmpty()
comment5.text=\n\ Checks\ whether\ the\ stack\ of\ rooms\ is\ empty.\n\ @return\ The\ boolean\ value\ true\ if\ stack\ is\ empty,\ returns\ false\ if\ it\ is\ not.\n
comment6.params=roomItem
comment6.target=void\ addItemToInventory(java.lang.String)
comment6.text=\n\ If\ the\ item\ doesn't\ exceed\ player\ maxWeigth,\ adds\ item\ to\ inventory\ and\ adds\ its\ weigth\ to\ player\ currentWeigth.\n\ Also\ prints\ out\ information.\n\ Adds\ an\ item\ to\ inventory,\ add\ its\ weigth\ and\ prints\ out\ information\ \n\ If\ item\ is\ to\ heavy,\ print\ error\ message.\n\ @param\ roomItem\ The\ item\ the\ player\ wants\ to\ add\ to\ inventory.\n
comment7.params=invItem
comment7.target=boolean\ isItemInInventory(java.lang.String)
comment7.text=\n\ Checks\ whether\ an\ item\ is\ in\ inventory\ or\ not.\n\ @param\ invItem\ The\ item\ the\ player\ wants\ to\ check.\n\ @return\ The\ boolean\ value\ true\ if\ the\ item\ is\ in\ inventory,\ returns\ false\ if\ it\ is\ not.\n
comment8.params=invItem
comment8.target=void\ removeItemFromInventory(java.lang.String)
comment8.text=\n\ Removes\ an\ item\ from\ inventory,\ removes\ item\ weigth\ from\ player\ current\ weigth,\ and\ prints\ out\ information.\n\ @param\ invItem\ The\ item\ the\ player\ want\ to\ remove\ from\ inventory.\n
comment9.params=
comment9.target=java.lang.String\ getInventoryString()
comment9.text=\n\ Returns\ a\ String\ with\ all\ items\ currently\ in\ inventory.\n\ @return\ A\ string\ with\ all\ items\ in\ inventory\ separated\ by\ space.\n
numComments=12
